AWS_memo

・オンプレミス => 自社設備・自社運用する環境
- 自社設備 - 機器設定・機器調達・設備管理の手間
- 自社運用 - 機器故障の対応・稼働中に対応可能な人員確保手間

・クラウド => インターネット越しに、必要なリソースにアクセスして使用する環境のこと
- 固定費の削減 - 従量課金制の為、需要予測・リース費・償却費不要- コストメリット - 調達に関するコストメリット、コスト削減効果により、ユーザの利用料に反映され低価格でクラウドサービスが使用可能になっている
- 需要変化に対応 - 急激な需要変化が起きてもスケールアップ/ダウン、スケールアウト/インに対応
- 対応速度の向上 - 開発環境をすぐに用意することができる
- 運用、保守に関する費用の削減 - 設備の購入・管理が不要になる為、ラッキング・電力管理、機器故障の対応が不要
- グローバル化 - 世界展開も容易、複数リージョンに展開することでアクセス低遅延で応答できる

・クラウドコンピューティングのサービスモデル
- IaaS (Infrastructure as a Service) => ネットワークやストレージを含むサーバー機能を提供
※ユーザーはサーバースペックを選択し、OS・ミドルウェアを導入
- PaaS (Platform as a Service) => OSやミドルウェアランタイムなどのアプリケーション実行環境を含むプラットフォームを提供
※ユーザーはインフラを意識せず、開発・導入ができる
- SaaS (Software as a Service) => アプリケーションを含む全ての機能を提供
※ユーザーは機能のオプションを設定

・Well-Architexted Framework(ウェル？アーキテクトフレームワーク)=>　AWSが提唱するクラウド設計・運用のベストプラクティス集、一般的な設定原則と6本の柱
・6本の柱
- 信頼性・セキュリティ・パフォーマンス効率・コスト最適化・運用上の優秀性・持続可能性
・一般的な設定原則
❶必要なキャパシティーの推測が不要
❷本番規模でシステムテスト
❸自動化によってアーキテクチャでの実験を容易に
❹発展するアーキテクチャが可能
❺データに基づいてアーキテクチャを進化
❻ゲームデーを利用して改善

・責任共有モデル => セキュリティ対策の責任をAWSとユーザーで分担する
- ユーザー責任 => ユーザーが設定・変更できる範囲
認証情報・アクセス権限・仮想サーバー上のデータやログ
- AWS責任範囲 => AWSが提供するサービスの範囲
ハードウェア・データセンター・ハイパーバイザー(ホストOS)のセキュリティ対策、ハイパーバイザーのパッチ適用

・AWSの使用 => AWSへはインターネット経由でアクセス
- AWSマネジメントコンソール => GUIツール
- AWSコマンドラインインターフェース(AWS CLI) => CLIのツール
- SDK(Software Development Kit) => プログラムに組込み、AWSのリソースへ容易にアクセスできるソフトウェア
※但し、プログラムからSDKが提供する機能を呼び出して実行する必要があり、SDKから直接AWSリソースの操作はできない


























